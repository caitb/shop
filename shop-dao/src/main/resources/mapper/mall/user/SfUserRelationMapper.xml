<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.masiis.shop.dao.mall.user.SfUserRelationMapper">
    <resultMap id="BaseResultMap" type="com.masiis.shop.dao.po.SfUserRelation">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="shop_id" property="shopId" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="user_pid" property="userPid" jdbcType="BIGINT"/>
        <result column="tree_code" property="treeCode" jdbcType="VARCHAR"/>
        <result column="tree_level" property="treeLevel" jdbcType="INTEGER"/>
        <result column="is_buy" property="isBuy" jdbcType="INTEGER" />
        <result column="is_spokesman" property="isSpokesman" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="DistributionResultMap" type="com.masiis.shop.dao.beans.user.SfSpokesAndFansInfo">
        <result column="wxName" property="wxName" jdbcType="VARCHAR"/>
        <result column="headImg" property="headImg" jdbcType="VARCHAR"/>
        <result column="ID" property="ID" jdbcType="VARCHAR"/>
        <result column="sopkenMan" property="sopkenMan" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="userId" property="userId" jdbcType="BIGINT"/>
        <result column="userLevel" property="userLevel" jdbcType="INTEGER"/>
        <result column="shopId" property="shopId" jdbcType="BIGINT"/>
        <result column="isBuy" property="isBuy" jdbcType="INTEGER"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sf_user_relation
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.masiis.shop.dao.po.SfUserRelation" useGeneratedKeys="true" keyProperty="id">
        insert into sf_user_relation (id, create_time, shop_id, 
            user_id, user_pid, tree_code, 
            tree_level, is_buy, is_spokesman, 
            remark)
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{shopId,jdbcType=BIGINT}, 
            #{userId,jdbcType=BIGINT}, #{userPid,jdbcType=BIGINT}, #{treeCode,jdbcType=VARCHAR}, 
            #{treeLevel,jdbcType=INTEGER}, #{isBuy,jdbcType=INTEGER}, #{isSpokesman,jdbcType=INTEGER}, 
            #{remark,jdbcType=VARCHAR})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.masiis.shop.dao.po.SfUserRelation">
        update sf_user_relation
        set create_time = #{createTime,jdbcType=TIMESTAMP},
            shop_id = #{shopId,jdbcType=BIGINT},
            user_id = #{userId,jdbcType=BIGINT},
            user_pid = #{userPid,jdbcType=BIGINT},
            tree_code = #{treeCode,jdbcType=VARCHAR},
            tree_level = #{treeLevel,jdbcType=INTEGER},
            is_buy = #{isBuy,jdbcType=INTEGER},
            is_spokesman = #{isSpokesman,jdbcType=INTEGER},
            remark = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, 
        is_spokesman, remark
        from sf_user_relation
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark,is_spokesman
        from sf_user_relation
    </select>

    <select id="getSfUserRelationByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark,is_spokesman
        from sf_user_relation
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectSfUserRelationByUserIdAndShopId" resultMap="BaseResultMap">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark,is_spokesman
        from sf_user_relation
        where user_id = #{userId}
        and shop_id = #{shopId}
    </select>

    <select id="getSfUserRelationByUserPid" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark,is_spokesman
        from sf_user_relation
        where user_pid = #{userPid,jdbcType=BIGINT}
    </select>

    <update id="updateTreeCodeById">
        update sf_user_relation set tree_code = #{treeCode}
        where id = #{id}
    </update>

    <update id="updateTreeCodes">
        update sf_user_relation set tree_code = SUBSTRING(tree_code,#{idIndex}),tree_level=tree_level-#{treeLevelDiff}
        where tree_code LIKE CONCAT(#{treeCode},'%')
    </update>

    <select id="selectFansNum" resultType="java.util.HashMap">
        select count(*) as num from sf_user_relation r inner join com_user u on r.user_id = u.id
        where
        tree_code like CONCAT(#{treeCode},'%')
        and tree_code <![CDATA[ <> ]]> #{treeCode}
        <if test="shopId != null">
            and r.shop_id = #{shopId}
        </if>
    </select>

    <select id="selectSpokesManNum" resultType="java.util.HashMap">
        select count(*) as num from sf_user_relation r inner join com_user u on r.user_id = u.id
        where
        r.is_spokesman = 1
        <if test="shopId != null">
            and r.shop_id = #{shopId}
        </if>
        and tree_code like CONCAT(#{treeCode},'%')
        and tree_code <![CDATA[ <> ]]> #{treeCode}
    </select>

    <select id="selectFansOrSpokesManNum" resultType="java.util.HashMap">
        SELECT
          count(*) as num
        FROM sf_user_relation a
        INNER JOIN sf_user_relation r ON r.tree_code LIKE CONCAT(a.tree_code,'%') and a.user_id <![CDATA[ <> ]]> r.user_id
        <if test="spokesMan != null">
            AND r.is_spokesman = #{spokesMan}
        </if>
        INNER JOIN com_user u ON r.user_id = u.id
        WHERE a.user_id=#{userId}
        <if test="shopId != null">
            AND a.shop_id=#{shopId}
        </if>
    </select>

    <select id="getSfUserRelationByUserIdAndShopId" resultMap="BaseResultMap">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark,is_spokesman
        from sf_user_relation
        where user_id = #{userId} and shop_id = #{shopId}
    </select>

    <select id="selectSfSpokesAndFansInfo" resultMap="DistributionResultMap">
        SELECT
			u.wx_nk_name AS wxName,
			u.wx_head_img AS headImg,
			LPAD(u.id, 10, 0) AS ID,
			r.is_spokesman AS sopkenMan,
			r.create_time AS createTime,
			u.id AS userId,
			1 AS userLevel,
			r.shop_id AS shopId,
			r.is_buy AS isBuy
		FROM
			sf_user_relation r
		INNER JOIN com_user u ON r.user_id = u.id
		WHERE
			r.shop_id = #{shopId} and r.user_id = #{userId}
    </select>

    <select id="selectFansPageView" resultMap="DistributionResultMap">
        SELECT * FROM (
            SELECT
            u.wx_nk_name AS wxName,
            u.wx_head_img AS headImg,
            LPAD(u.id,10,0) AS ID,
            r.is_spokesman AS sopkenMan,
            r.create_time AS createTime,
            u.id AS userId,
            r.tree_level - a.tree_level AS userLevel,
            r.shop_id AS shopId,
            r.is_buy AS isBuy
            FROM sf_user_relation a
            INNER JOIN sf_user_relation r ON r.tree_code LIKE CONCAT(a.tree_code,'%') and a.user_id <![CDATA[ <> ]]> r.user_id
            INNER JOIN com_user u ON r.user_id = u.id
            WHERE a.user_id=#{userId,jdbcType=BIGINT}
            <if test="shopId != null">
                and a.shop_id = #{shopId}
            </if>
            <if test="sopkenMan != null">
                AND r.tree_level BETWEEN a.tree_level+1 AND a.tree_level+2
            </if>
            <if test="sopkenMan == null">
                AND r.tree_level BETWEEN a.tree_level+1 AND a.tree_level+3
            </if>
        ) t where 1 = 1
        <if test="sopkenMan != null">
            and t.sopkenMan = #{sopkenMan}
        </if>
        <if test="userLevel != null">
            and t.userLevel = #{userLevel}
        </if>
        order by t.createTime desc
    </select>

    <select id="selectAllSopkesManCountByShopId" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM
            sf_user_relation r
        INNER JOIN com_user u ON r.user_id = u.id AND u.id <![CDATA[ <> ]]> #{userId}
        WHERE
	        r.shop_id = #{shopId}
        <if test="spokesMan != null">
            AND r.is_spokesman = #{spokesMan}
        </if>
    </select>
    <select id="selectAllSpokesManByShopId" resultMap="DistributionResultMap">
        SELECT
            u.wx_nk_name AS wxName,
            u.wx_head_img AS headImg,
            LPAD(u.id, 10, 0) AS ID,
            r.is_spokesman AS sopkenMan,
            r.create_time AS createTime,
            u.id AS userId,
            1 AS userLevel,
            r.shop_id AS shopId,
            r.is_buy AS isBuy
        FROM
            sf_user_relation r
        INNER JOIN com_user u ON r.user_id = u.id
        WHERE
	        r.shop_id = #{shopId}
        <if test="spokesMan != null">
            AND r.is_spokesman = #{spokesMan}
        </if>
        ORDER BY r.create_time desc
    </select>

    <select id="selectFansNumGroupByLevel" resultType="java.util.HashMap">
        SELECT count(*) as num,userLevel from
        (
            SELECT
            u.wx_nk_name AS wxName,
            u.wx_head_img AS headImg,
            LPAD(u.id,10,0) AS ID,
            r.is_spokesman AS sopkenMan,
            r.create_time AS createTime,
            u.id AS userId,
            r.tree_level - a.tree_level AS userLevel,
            r.shop_id AS shopId,
            r.is_buy AS isBuy
            FROM sf_user_relation a
            INNER JOIN sf_user_relation r ON r.tree_code LIKE CONCAT(a.tree_code,'%') and a.user_id <![CDATA[ <> ]]> r.user_id
            INNER JOIN com_user u ON r.user_id = u.id
            WHERE a.user_id= #{userId,jdbcType=BIGINT}
            <if test="shopId != null">
                and a.shop_id = #{shopId}
            </if>
            <if test="sopkenMan != null">
                and r.is_spokesman = #{sopkenMan} AND r.tree_level BETWEEN a.tree_level+1 AND a.tree_level+2
            </if>
            <if test="sopkenMan == null">
                AND r.tree_level BETWEEN a.tree_level+1 AND a.tree_level+3
            </if>
        ) t where 1 = 1
        <if test="userLevel != null">
            and t.userLevel = #{userLevel}
        </if>
        group by t.userLevel
    </select>
    
    <select id="selectSpokesManByID" resultMap="DistributionResultMap">
        SELECT * FROM
	    (
            SELECT
                u.wx_nk_name AS wxName,
                u.wx_head_img AS headImg,
                LPAD(u.id, 10, 0) AS ID,
                r.is_spokesman AS sopkenMan,
                r.create_time AS createTime,
                u.id AS userId,
                1 AS userLevel,
                r.shop_id AS shopId,
                r.is_buy AS isBuy
            FROM
                sf_user_relation r
            INNER JOIN com_user u ON r.user_id = u.id AND u.id <![CDATA[ <> ]]> #{userId}
            WHERE
                r.shop_id = #{shopId}
	    ) T WHERE 1=1
	    <if test="ID != null">
            AND T.ID like CONCAT('%',#{ID},'%')
        </if>
        <if test="sopkenMan != null">
            AND T.sopkenMan = #{sopkenMan}
        </if>
        ORDER BY T.createTime DESC
    </select>
    <select id="selectSpokesManNumByID" resultType="java.lang.Integer">
        SELECT count(*) FROM
        (
            SELECT
            u.wx_nk_name AS wxName,
            u.wx_head_img AS headImg,
            LPAD(u.id, 10, 0) AS ID,
            r.is_spokesman AS sopkenMan,
            r.create_time AS createTime,
            u.id AS userId,
            1 AS userLevel,
            r.shop_id AS shopId,
            r.is_buy AS isBuy
            FROM
            sf_user_relation r
            INNER JOIN com_user u ON r.user_id = u.id and u.id <![CDATA[ <> ]]> #{userId}
            WHERE
            r.shop_id = #{shopId}
        ) T WHERE 1=1selectSpokesManByID
        <if test="ID != null">
            AND T.ID like CONCAT('%',#{ID},'%')
        </if>
        <if test="spokesMan">
            AND T.sopkenMan = 1
        </if>
    </select>

    <select id="selectFansNumsByShopId" resultType="java.lang.Integer">
        select
          count(id)
        from
          sf_user_relation
        WHERE
          shop_id = #{shopId,jdbcType=BIGINT}
        AND
          user_id != #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectSfSpokesManNumByShopId" resultType="java.lang.Integer">
        select
          count(r.id)
        from
          sf_user_relation r,com_user u
        WHERE
          r.user_id = u.id
        AND
          r.is_spokesman = 1
        AND
          shop_id = #{shopId,jdbcType=BIGINT}
        AND
          user_id != #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectAllFansRelationByShopId" resultMap="BaseResultMap">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark,is_spokesman
        from sf_user_relation
        where
          shop_id = #{shopId}
        AND
          user_id != #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectAllSpokeManRelationByShopId" resultMap="BaseResultMap">
        select
          r.id, r.create_time, r.shop_id, r.user_id, r.user_pid, r.tree_code, r.tree_level, r.is_buy, r.remark,r.is_spokesman
        from
          sf_user_relation r,com_user u
        WHERE
          r.user_id = u.id
        AND
          r.is_spokesman = 1
        AND
          shop_id = #{shopId,jdbcType=BIGINT}
        AND
          user_id != #{userId,jdbcType=BIGINT}
    </select>
</mapper>