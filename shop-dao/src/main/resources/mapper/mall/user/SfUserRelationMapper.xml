<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.masiis.shop.dao.mall.user.SfUserRelationMapper">
    <resultMap id="BaseResultMap" type="com.masiis.shop.dao.po.SfUserRelation">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="shop_id" property="shopId" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="user_pid" property="userPid" jdbcType="BIGINT"/>
        <result column="tree_code" property="treeCode" jdbcType="VARCHAR"/>
        <result column="tree_level" property="treeLevel" jdbcType="INTEGER"/>
        <result column="is_buy" property="isBuy" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sf_user_relation
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.masiis.shop.dao.po.SfUserRelation" >
        insert into sf_user_relation (id, create_time, shop_id, 
            user_id, user_pid, tree_code, 
            tree_level, is_buy, remark
            )
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{shopId,jdbcType=BIGINT}, 
            #{userId,jdbcType=BIGINT}, #{userPid,jdbcType=BIGINT}, #{treeCode,jdbcType=VARCHAR}, 
            #{treeLevel,jdbcType=INTEGER}, #{isBuy,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
            )
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.masiis.shop.dao.po.SfUserRelation">
        update sf_user_relation
        set create_time = #{createTime,jdbcType=TIMESTAMP},
            shop_id = #{shopId,jdbcType=BIGINT},
            user_id = #{userId,jdbcType=BIGINT},
            user_pid = #{userPid,jdbcType=BIGINT},
            tree_code = #{treeCode,jdbcType=VARCHAR},
            tree_level = #{treeLevel,jdbcType=INTEGER},
            is_buy = #{isBuy,jdbcType=INTEGER},
            remark = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, 
        remark
        from sf_user_relation
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark
        from sf_user_relation
    </select>

    <select id="getSfUserRelationByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark
        from sf_user_relation
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectSfUserRelationByUserIdAndShopId" resultMap="BaseResultMap">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark
        from sf_user_relation
        where user_id = #{userId}
        and shop_id = #{shopId}
    </select>

    <select id="getSfUserRelationByUserPid" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select id, create_time, shop_id, user_id, user_pid, tree_code, tree_level, is_buy, remark
        from sf_user_relation
        where user_pid = #{userPid,jdbcType=BIGINT}
    </select>

    <select id="getThreeDistributionList" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select * from (
          select * from sf_user_relation where user_pid = #{userPid,jdbcType=BIGINT}
          union all select * from sf_user_relation where user_pid in (select user_id from sf_user_relation where user_pid = #{userPid,jdbcType=BIGINT})
	      union all select * from sf_user_relation where user_pid in (select user_id from sf_user_relation where user_pid in (select user_id from sf_user_relation where user_pid = #{userPid,jdbcType=BIGINT}))
        )t
    </select>

    <update id="updateTreeCodeById">
        update sf_user_relation set tree_code = #{treeCode}
        where id = #{id}
    </update>

    <update id="updateTreeCodes">
        update sf_user_relation set tree_code = SUBSTRING(tree_code,#{idIndex}),tree_level=tree_level-#{treeLevelDiff}
        where tree_code LIKE CONCAT(#{treeCode},'%')
    </update>

    <select id="selectFansNum" resultMap="java.util.HashMapr">
        select count(*)-1 as num from sf_user_relation where tree_code like CONCAT(#{treeCode},'%')
    </select>
</mapper>