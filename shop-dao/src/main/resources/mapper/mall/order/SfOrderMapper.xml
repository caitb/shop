<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.masiis.shop.dao.mall.order.SfOrderMapper" >
    <resultMap id="BaseResultMap" type="com.masiis.shop.dao.po.SfOrder" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_man" property="createMan" jdbcType="BIGINT" />
        <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="shop_id" property="shopId" jdbcType="BIGINT" />
        <result column="shop_user_id" property="shopUserId" jdbcType="BIGINT" />
        <result column="user_message" property="userMessage" jdbcType="VARCHAR" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="modify_man" property="modifyMan" jdbcType="BIGINT" />
        <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
        <result column="product_amount" property="productAmount" jdbcType="DECIMAL" />
        <result column="ship_amount" property="shipAmount" jdbcType="DECIMAL" />
        <result column="agent_ship_amount" property="agentShipAmount" jdbcType="DECIMAL" />
        <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
        <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
        <result column="distribution_amount" property="distributionAmount" jdbcType="DECIMAL" />
        <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
        <result column="ship_man_id" property="shipManId" jdbcType="INTEGER" />
        <result column="ship_man_name" property="shipManName" jdbcType="VARCHAR" />
        <result column="ship_type" property="shipType" jdbcType="INTEGER" />
        <result column="ship_time" property="shipTime" jdbcType="TIMESTAMP" />
        <result column="ship_remark" property="shipRemark" jdbcType="VARCHAR" />
        <result column="send_type" property="sendType" jdbcType="INTEGER" />
        <result column="send_man" property="sendMan" jdbcType="BIGINT" />
        <result column="order_type" property="orderType" jdbcType="INTEGER" />
        <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
        <result column="ship_status" property="shipStatus" jdbcType="INTEGER" />
        <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
        <result column="is_counting" property="isCounting" jdbcType="INTEGER" />
        <result column="is_ship" property="isShip" jdbcType="INTEGER" />
        <result column="is_replace" property="isReplace" jdbcType="INTEGER" />
        <result column="is_receipt" property="isReceipt" jdbcType="INTEGER" />
        <result column="receipt_time" property="receiptTime" jdbcType="TIMESTAMP" />
        <result column="replace_order_id" property="replaceOrderId" jdbcType="BIGINT" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from sf_order
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.masiis.shop.dao.po.SfOrder"  useGeneratedKeys="true" keyProperty="id">
        insert into sf_order (id, create_time, create_man, 
            order_code, user_id, shop_id, 
            shop_user_id, user_message, modify_time, 
            modify_man, order_amount, product_amount, 
            ship_amount,agent_ship_amount, receivable_amount, pay_amount,
            distribution_amount, pay_time, ship_man_id, 
            ship_man_name, ship_type, ship_time, 
            ship_remark, send_type,send_man, order_type,
            order_status, ship_status, pay_status, 
            is_counting, is_ship, is_replace, 
            is_receipt, receipt_time, replace_order_id, 
            remark)
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{createMan,jdbcType=BIGINT}, 
            #{orderCode,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, 
            #{shopUserId,jdbcType=BIGINT}, #{userMessage,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
            #{modifyMan,jdbcType=BIGINT}, #{orderAmount,jdbcType=DECIMAL}, #{productAmount,jdbcType=DECIMAL}, 
            #{shipAmount,jdbcType=DECIMAL},#{agentShipAmount,jdbcType=DECIMAL}, #{receivableAmount,jdbcType=DECIMAL}, #{payAmount,jdbcType=DECIMAL},
            #{distributionAmount,jdbcType=DECIMAL}, #{payTime,jdbcType=TIMESTAMP}, #{shipManId,jdbcType=INTEGER}, 
            #{shipManName,jdbcType=VARCHAR}, #{shipType,jdbcType=INTEGER}, #{shipTime,jdbcType=TIMESTAMP}, 
            #{shipRemark,jdbcType=VARCHAR}, #{sendType,jdbcType=INTEGER}, #{sendMan,jdbcType=BIGINT},  #{orderType,jdbcType=INTEGER},
            #{orderStatus,jdbcType=INTEGER}, #{shipStatus,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, 
            #{isCounting,jdbcType=INTEGER}, #{isShip,jdbcType=INTEGER}, #{isReplace,jdbcType=INTEGER}, 
            #{isReceipt,jdbcType=INTEGER}, #{receiptTime,jdbcType=TIMESTAMP}, #{replaceOrderId,jdbcType=BIGINT}, 
            #{remark,jdbcType=VARCHAR})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.masiis.shop.dao.po.SfOrder" >
        update
               sf_order
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createMan != null">
                create_man = #{createMan,jdbcType=BIGINT},
            </if>
            <if test="orderCode != null">
                order_code = #{orderCode,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=BIGINT},
            </if>
            <if test="shopUserId != null">
                shop_user_id = #{shopUserId,jdbcType=BIGINT},
            </if>
            <if test="userMessage != null">
                user_message = #{userMessage,jdbcType=VARCHAR},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyMan != null">
                modify_man = #{modifyMan,jdbcType=BIGINT},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="productAmount != null">
                product_amount = #{productAmount,jdbcType=DECIMAL},
            </if>
            <if test="shipAmount != null">
                ship_amount = #{shipAmount,jdbcType=DECIMAL},
            </if>
            <if test="agentShipAmount != null">
                agent_ship_amount = #{agentShipAmount,jdbcType=DECIMAL},
            </if>
            <if test="receivableAmount != null">
                receivable_amount = #{receivableAmount,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null">
                pay_amount = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="distributionAmount != null">
                distribution_amount = #{distributionAmount,jdbcType=DECIMAL},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="shipManId != null">
                ship_man_id = #{shipManId,jdbcType=INTEGER},
            </if>
            <if test="shipManName != null">
                ship_man_name = #{shipManName,jdbcType=VARCHAR},
            </if>
            <if test="shipType != null">
                ship_type = #{shipType,jdbcType=INTEGER},
            </if>
            <if test="shipTime != null">
                ship_time = #{shipTime,jdbcType=TIMESTAMP},
            </if>
            <if test="shipRemark != null">
                ship_remark = #{shipRemark,jdbcType=VARCHAR},
            </if>
            <if test="sendType != null">
                send_type = #{sendType,jdbcType=INTEGER},
            </if>
            <if test="sendMan != null">
                send_man = #{sendMan,jdbcType=BIGINT},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=INTEGER},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=INTEGER},
            </if>
            <if test="shipStatus != null">
                ship_status = #{shipStatus,jdbcType=INTEGER},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=INTEGER},
            </if>
            <if test="isCounting != null">
                is_counting = #{isCounting,jdbcType=INTEGER},
            </if>
            <if test="isShip != null">
                is_ship = #{isShip,jdbcType=INTEGER},
            </if>
            <if test="isReplace != null">
                is_replace = #{isReplace,jdbcType=INTEGER},
            </if>
            <if test="isReceipt != null">
                is_receipt = #{isReceipt,jdbcType=INTEGER},
            </if>
            <if test="receiptTime != null">
                receipt_time = #{receiptTime,jdbcType=TIMESTAMP},
            </if>
            <if test="replaceOrderId != null">
                replace_order_id = #{replaceOrderId,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR}
            </if>
        </set>
        where
              id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select id, create_time, create_man, order_code, user_id, shop_id, shop_user_id, user_message, 
        modify_time, modify_man, order_amount, product_amount, ship_amount,agent_ship_amount, receivable_amount,
        pay_amount, distribution_amount, pay_time, ship_man_id, ship_man_name, ship_type, 
        ship_time, ship_remark, send_type,send_man, order_type, order_status, ship_status, pay_status,
        is_counting, is_ship, is_replace, is_receipt, receipt_time, replace_order_id, remark
        from sf_order
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap" >
        select id, create_time, create_man, order_code, user_id, shop_id, shop_user_id, user_message, 
        modify_time, modify_man, order_amount, product_amount, ship_amount,agent_ship_amount, receivable_amount,
        pay_amount, distribution_amount, pay_time, ship_man_id, ship_man_name, ship_type, 
        ship_time, ship_remark, send_type, send_man, order_type, order_status, ship_status, pay_status,
        is_counting, is_ship, is_replace, is_receipt, receipt_time, replace_order_id, remark
        from sf_order
    </select>

    <select id="selectByOrderCode" resultMap="BaseResultMap" parameterType="java.lang.String">
      select id, create_time, create_man, order_code, user_id, shop_id, shop_user_id, user_message,
        modify_time, modify_man, order_amount, product_amount, ship_amount, agent_ship_amount,receivable_amount,
        pay_amount, distribution_amount, pay_time, ship_man_id, ship_man_name, ship_type,
        ship_time, ship_remark, send_type,send_man,  order_type, order_status, ship_status, pay_status,
        is_counting, is_ship, is_replace, is_receipt, receipt_time, replace_order_id, remark
        from sf_order
        where order_code = #{orderCode,jdbcType=VARCHAR}
    </select>

    <select id="countByShopId" parameterType="Long" resultType="Integer">
        SELECT count(1) FROM sf_order WHERE shop_id = #{shopId}
    </select>

    <select id="selectByMap" parameterType="Map" resultMap="BaseResultMap" >
        select
               id,
               create_time,
               create_man,
               order_code,
               user_id,
               shop_id,
               shop_user_id,
               user_message,
               modify_time,
               modify_man,
               order_amount,
               product_amount,
               ship_amount,
               agent_ship_amount,
               receivable_amount,
               pay_amount,
               distribution_amount,
               pay_time,
               ship_man_id,
               ship_man_name,
               ship_type,
               ship_time,
               ship_remark,
               send_type,
                send_man,
                 order_type,
               order_status,
               ship_status,
               pay_status,
               is_counting,
               is_ship,
               is_replace,
               is_receipt,
               receipt_time,
               replace_order_id,
               remark
        from
               sf_order
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="orderCode != null">
                AND order_code = #{orderCode}
            </if>
            <if test="createMan != null">
                AND create_man = #{createMan}
            </if>
            <if test="shipStatus != null">
                AND ship_status = #{shipStatus}
            </if>
            <if test="orderStatus != null">
                AND order_status = #{orderStatus}
            </if>
            <if test="payStatus != null">
                AND pay_status = #{payStatus}
            </if>
            <if test="beginTime != null"  >
                AND create_time &gt;=#{beginTime}
            </if>
            <if test="endTime != null"  >
                AND create_time &lt;=#{endTime}
            </if>
            <if test="isCounting!= null">
                AND is_counting = #{isCounting}
            </if>
            <if test="sendType != null">
                AND send_type = #{sendType}
            </if>
        </where>
    </select>

    <select id="selectByStatusAndDate" resultMap="BaseResultMap">
        select id, create_time, create_man, order_code, user_id, shop_id, shop_user_id, user_message,
        modify_time, modify_man, order_amount, product_amount, ship_amount,agent_ship_amount, receivable_amount,
        pay_amount, distribution_amount, pay_time, ship_man_id, ship_man_name, ship_type,
        ship_time, ship_remark, send_type,send_man,  order_type, order_status, ship_status, pay_status,
        is_counting, is_ship, is_replace, is_receipt, receipt_time, replace_order_id, remark
        from sf_order
        where order_status = #{orderStatus,jdbcType=INTEGER}
        and pay_status = #{payStatus,jdbcType=INTEGER}
        AND create_time <![CDATA[ <= ]]> #{expiraTime,jdbcType=TIMESTAMP}
    </select>

    <select id="selectByStatusAndShipTime" resultMap="BaseResultMap">
        select id, create_time, create_man, order_code, user_id, shop_id, shop_user_id, user_message,
        modify_time, modify_man, order_amount, product_amount, ship_amount,agent_ship_amount, receivable_amount,
        pay_amount, distribution_amount, pay_time, ship_man_id, ship_man_name, ship_type,
        ship_time, ship_remark, send_type,send_man,  order_type, order_status, ship_status, pay_status,
        is_counting, is_ship, is_replace, is_receipt, receipt_time, replace_order_id, remark
        from sf_order
        where order_status = #{orderStatus,jdbcType=INTEGER}
        and pay_status = #{payStatus,jdbcType=INTEGER}
        AND ship_time <![CDATA[ <= ]]> #{expiraTime,jdbcType=TIMESTAMP}
    </select>

    <update id="updateOrderCancelById">
        UPDATE sf_order
        SET order_status = #{orderStatus,jdbcType=INTEGER}
        WHERE id=#{orderId,jdbcType=BIGINT}
    </update>

    <select id="selectNotIsBuyByUserId" resultMap="BaseResultMap" >
        select * from sf_order where id = (select min(id) from sf_order where user_id = #{userId} and order_status = #{status}) and datediff(now(),receipt_time) &gt; 7 ;
    </select>

    <select id="selectByShopUserIds" resultMap="BaseResultMap">
        select * from sf_order
        where shop_user_id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectByUserIds" resultMap="BaseResultMap">
        select * from sf_order
        where
        <!--shop_user_id &lt;&gt; #{userId} and-->
        user_id in
        <foreach item="item" collection="userIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select * from sf_order where user_id = #{userId}
    </select>

    <!-- 查询店铺代发货订单 -->
    <select id="selectDeliveryByCondition" parameterType="Map" resultType="java.util.HashMap">
        SELECT
               o.id                id,
               o.create_time       createTime,
               o.order_code        orderCode,
               bu.wx_nk_name       bWxNkName,
               su.real_name        suRealName,
               o.product_amount    productAmount,
               o.receivable_amount receivableAmount,
               o.pay_amount        payAmount,
               o.send_type         sendType,
               o.order_status      orderStatus,
               op.pay_type_id      payTypeId,
               o.pay_status        payStatus,
               o.ship_status       shipStatus,
               o.is_counting       isCounting
               ,o.user_message     userMessage
               ,oc.consignee       consignee
               ,oc.mobile          mobile
               ,oc.province_name   provinceName
               ,oc.city_name       cityName
               ,oc.region_name     regionName
               ,oc.address         address
               ,oc.zip             zip
               ,oi.sku_name        skuName
               ,oi.quantity        quantity
        FROM
                  sf_order o
        LEFT JOIN com_user           bu ON bu.id          = o.user_id
        LEFT JOIN com_user           su ON su.id          = o.shop_user_id
        LEFT JOIN sf_order_payment   op ON op.sf_order_id = o.id AND op.is_enabled = 1
        LEFT JOIN sf_order_consignee oc ON oc.sf_order_id = o.id
        LEFT JOIN sf_order_item      oi ON oi.sf_order_id = o.id
        WHERE
        <![CDATA[
                o.order_status = 7
                AND o.pay_status = 1 AND o.ship_status = 0 AND o.send_type = 1
                AND NOT EXISTS(SELECT 0 FROM sf_order a
                INNER JOIN sf_order_item b ON a.id=b.sf_order_id
                INNER JOIN pf_user_sku_stock c ON a.shop_user_id=c.user_id AND b.sku_id=c.sku_id
                WHERE a.order_status=7 AND b.quantity > c.stock AND o.id=a.id)
                ]]>
        <if test="orderCode != null">
            AND o.order_code = #{orderCode}
        </if>
        <if test="beginTime != null">
            <![CDATA[ AND o.create_time >= #{beginTime} ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[ AND o.create_time <= #{endTime} ]]>
        </if>
        <if test="orderStatus != null">
           AND o.order_status = #{orderStatus}
        </if>
        <if test="payStatus != null">
            AND o.pay_status = #{payStatus}
        </if>
        <if test="shipStatus != null">
            AND o.ship_status = #{shipStatus}
        </if>
        <if test="isCounting != null">
            AND o.is_counting = #{isCounting}
        </if>
    </select>

    <select id="selectUnshippedOrderCount" resultType="Integer">
        select count(*)
        from sf_order
        where order_status = #{orderStatus}
          and shop_id = #{shopId} and shop_user_id = #{userId}
    </select>

    <select id="getShopOrderList" resultType="java.util.HashMap">
        SELECT
            bo.id,
            bo.order_code,
            bo.order_status,
            bo.order_type,
            bo.send_type,
            bo.create_time,
            bo.receivable_amount,
            bo.order_amount,
            bo.pay_amount,
            bo.pay_time,
            bo.ship_amount,
            bi.sku_id,
            bi.unit_price,
            bi.quantity,
            sku.`name`,
            skui.img_url
        FROM
            sf_order bo
        LEFT JOIN sf_order_item bi   ON bi.sf_order_id = bo.id
        LEFT JOIN com_sku        sku  ON sku.id = bi.sku_id
        LEFT JOIN com_sku_image  skui ON skui.sku_id = bi.sku_id AND skui.is_default = 1
        <where>
            bo.shop_user_id = #{shopUserId}
            <if test="orderStatus != null">
                AND bo.order_status = #{orderStatus}
            </if>
            <if test="sendType != null">
                AND bo.send_type = #{sendType}
            </if>
        </where>
        ORDER BY bo.create_time DESC, skui.img_url DESC
    </select>


</mapper>