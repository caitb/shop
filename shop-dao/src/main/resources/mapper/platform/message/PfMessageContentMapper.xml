<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.masiis.shop.dao.platform.message.PfMessageContentMapper" >
    <resultMap id="BaseResultMap" type="com.masiis.shop.dao.po.PfMessageContent" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="content_url" property="contentUrl" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from pf_message_content
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.masiis.shop.dao.po.PfMessageContent" useGeneratedKeys="true" keyProperty="id">
        insert into pf_message_content (id, create_time, user_id, 
            type, content, content_url, 
            status, update_time, remark
            )
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT}, 
            #{type,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{contentUrl,jdbcType=VARCHAR}, 
            #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
            )
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.masiis.shop.dao.po.PfMessageContent" >
        update pf_message_content
        set create_time = #{createTime,jdbcType=TIMESTAMP},
            user_id = #{userId,jdbcType=BIGINT},
            type = #{type,jdbcType=INTEGER},
            content = #{content,jdbcType=VARCHAR},
            content_url = #{contentUrl,jdbcType=VARCHAR},
            status = #{status,jdbcType=INTEGER},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            remark = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select id, create_time, user_id, type, content, content_url, status, update_time, 
        remark
        from pf_message_content
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap" >
        select id, create_time, user_id, type, content, content_url, status, update_time, 
        remark
        from pf_message_content
    </select>

    <select id="queryByUserId" resultMap="BaseResultMap">
        select id, create_time, user_id, type, content, content_url, status, update_time,
          remark
        from pf_message_content
        WHERE
          user_id = #{userId,jdbcType=BIGINT}
        AND
          `type` = #{type,jdbcType=BIGINT}
    </select>

    <select id="queryLatestByUserIdAndType" resultMap="BaseResultMap">
        select id, create_time, user_id, type, content, content_url, status, update_time,
          remark
        from pf_message_content
        WHERE
          user_id = #{userId,jdbcType=BIGINT}
        AND
          `type` = #{type,jdbcType=BIGINT}
        ORDER BY
          create_time DESC
        limit 1
    </select>

    <select id="queryByUserIdAndTypeWithPaging" resultMap="BaseResultMap">
        SELECT
          c.*
        FROM
          pf_message_content c
        WHERE
          id <![CDATA[ <= ]]> (
                SELECT
                  c1.id
                FROM
                  pf_message_content c1
                WHERE
                  c1.user_id = #{userId,jdbcType=BIGINT}
                AND
                  c1.type = #{type,jdbcType=INTEGER}
                ORDER BY
                  c1.id DESC
                LIMIT #{start,jdbcType=INTEGER}, 1
                )
        AND c.user_id = #{userId,jdbcType=BIGINT}
        AND c.type = #{type,jdbcType=INTEGER}
        ORDER BY
          c.id DESC
        LIMIT #{pageSize,jdbcType=INTEGER}
    </select>

    <select id="queryNumsByUserIdAndType" resultType="java.lang.Integer">
        SELECT
            COUNT(0)
        FROM
            pf_message_content c1
        WHERE
            c1.user_id = #{fUserId,jdbcType=BIGINT}
        AND c1.type = #{type,jdbcType=INTEGER};
    </select>

</mapper>